name: CI/CD Pipeline

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

env:
  PYTHON_VERSION: "3.10"

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:17
        ports:
          - 5432:5432
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 0607
          POSTGRES_DB: url_shortener
        options: >-
          --health-cmd="pg_isready"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for Postgres to be ready
        run: |
          sleep 10  # Ensures Postgres is ready

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://postgres:0607@localhost:5432/url_shortener
        run: |
          pip install pytest pytest-cov
          export PYTHONPATH=.
          pytest --cov=./ --cov-report=xml

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./coverage.xml
          fail_ci_if_error: true
          verbose: true

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Deploy application
        run: echo "Deployment step would go here (e.g., Docker, SSH, Heroku, etc.)"
